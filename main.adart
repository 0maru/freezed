import 'package:meta/meta.dart';

part 'main.g.dart';

@Immutable({
  'a': int,
  'b': String,
})
class Test = _Test with Nothing;

@data
abstract class MyClass with _MyClassBase {
  const factory MyClass({
    required String a,
    @protected int? b,
    Object? d,
  }) = _MyClass;

  factory MyClass.fromJSON(Map<String, dynamic> json) = _MyClass.fromJSON;
}

class Immutable {
  const Immutable(Map<String, Type> details);
}

const data = _Data();

class _Data {
  const _Data();
}

extension MyClassGetters on MyClass {
  String get total => '$a $b $d';
}

void main() {
  Test(a: 'hello');

  final myClass = const MyClass(a: 'hello', b: 42);

  print(myClass); // MyClass(a: null, b: 42, d: null)
  print(myClass.copyWith(a: 'world')); // MyClass(a: hello, b: 42, d: null)
  print(myClass.copyWith(a: null)); // error

  print(myClass.copyWith(b: 24)); //  // MyClass(a: hello, b: 24, d: null)
  print(myClass.copyWith(b: null)); //  // MyClass(a: hello, b: null, d: null)
}
